<template>
    <div class="">
    <!--
        <MyComponent-1
            v-bind="dataObj"
            :propArray="{{dataArr}}"
            @click="clickMethod"
        ></MyComponent-1>

        <div
            v-for="(item, index) in items"
            :key="index"
        >
            <MyComponent2>{{item.name || item}} at position {{index}}</MyComponent2>
        </div>
    -->
    </div>
</template>

<script>
    <%_ if (vuexMap) { _%>
    import { mapState, mapGetters, mapActions, mapMutations } from 'vuex'

    <%_ } _%>
    // import MyComponent1 from '@/path/to/component'
    // import MyComponent2 from '@/path/to/component'

    export default {
        name: '',

        props: {
            /*
            prop: {
                type: [Boolean, String, Object, Array],
                required: <Boolean>,
                default: null
            }
            */
        },

        mixins: [
            // 'mixinName'
        ],

        components: {
            /*
            'MyComponent-1': MyComponent1,
            MyComponent2
            */
        },

        data: () => ({
            /*
            dataBoolean: <Boolean>
            dataString: '',
            dataObj: {},
            dataArr: []
            */
        }),

        computed: {
            <%_ if (vuexMap) { _%>
            ...mapState({
                // someStateProp: state => state.module.prop
            }),

            ...mapGetters({
                // stateGetter: 'stateGetterName'
            })
            <%_ } _%>
            /*
            computedProp1 () {
                return false
            },
            
            computedProp2: {
                get () { return true },
                set (val) { this.dataBoolean = val}
            },

            computedProp3: {
                return dataArg => {
                    return this.dataObj[dataArg]
                }
            }
            */
        },
        
        <%_ if (lifecycleHooks) { _%>
        beforeCreated () {},
        created () {},
        beforeMount () {},
        mounted () {},
        beforeUpdated () {},
        updated () {},
        beforeDestroy () {},
        destroyed () {},
        
        <%_ } _%>
        methods: {
            <%_ if (vuexMap) { _%>
            ...mapActions({
                // vuexAction: 'vuexActionName'
            }),

            ...mapMutations({
               // 
            })
            
            <%_ } _%>
            /*
            clickMethod () {
                // do something
            }
            */
        },

        watch: {
            /*
            prop: {
                deep: true,
                immediate: true,
                handler (newVal, oldVal) {
                    console.log(new, old)
                }
            }
            */
        }
    }
</script>

<style lang="<%=cssLang%>" <%=scopedStyles ? 'scoped' : null%>>
    
</style>